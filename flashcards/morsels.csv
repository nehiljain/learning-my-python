# FRONT	BACK
"What is tuple unpacking?","Multiple assignment. For example: x, y = 1, 2."
"How to make a object work with multiple assigment? For example: x, y = Point(1, 2)","Make it a an iterable. Like def __iter__(): yield"
"What is the formula for polynomial hash code? What is a potential problem of this function?","Horner's rule, xn−1 +a(xn−2 +a(xn−3 +···+a(x2 +a(x1 +ax0))···)). The repr overflows but we ignore it"
"How does cyclic shift hash code work?","Choose 5 or x number of bits to shift you sum all the bits of the string representation"
"What type of objects are hashable in python?","Immutable only hash(x)"
"Are user defined classes hashable?","No by default in Python. Custom implementation can be done using __hash__"
"What are two compression functions for hashing?","Division Method (i mod N) and MAD ([(ai+b) mod p] mod N)"
"What is the load factor in  separate  chaining?", "ratio λ = n/N where n is number of items in the map and N is the size of the bucket array"
"What is disadvantage of using separate chaining vs open address?", "It requires extra space."
"What is advantage of using separate chaining vs open address?", "Simplicity"
"What is the load factor of open adressing?", "At most 1"
"What is linear probing?", "With this approach, if we try to insert an item (k, v) into a bucket A[j] that is already occupied, where j = h(k), then we next try A[(j+1) mod N]. If A[(j+1) mod N] is also occupied, then we try A[( j + 2) mod N ], and so on, until we find an empty bucket that can accept the new item."
"What is quadratic probing?", "Another open addressing strategy, known as quadratic probing, iteratively tries the buckets A[(h(k)+ f(i)) mod N], for i = 0,1,2,..., where f(i) = i2, until finding an empty bucket. As with linear probing, the quadratic probing strategy compli- cates the removal operation"
"What is secondary clustering in hashtable?", "Quadratic Probing creates its own kind of clustering, called secondary clustering, where the set of filled array cells still has a non-uniform pattern, even if we assume that the original hash codes are distributed uniformly."
"What is double hashing? What is the formula for its compression function?", "In this approach, we choose a secondary hash function, h, and if h maps some key k to a bucket A[h(k)] that is already occupied, then we iteratively try the buckets A[(h(k)+ f(i)) mod N] next, for i = 1,2,3,..., where f(i) = i·h(k). In this scheme, the secondary hash function is not allowed to evaluate to zero; a common choice is h(k) = q − (k mod q), for some prime number q < N. Also, N should be a prime."
"What can be done when the load factor goes above the specified threshold? For example: λ < 0.9 for separate chaining, λ < 2/3 for python implementation", "Resize the table"
"What is rehashing?", "When we resize the hash table, we use a new compression function to spread the items evenly in the new table"
